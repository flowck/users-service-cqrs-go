version: '3'

dotenv:
  - ./.env

tasks:
  #
  # Run
  #
  run:
    cmds:
      - go run ./cmd

  run:dev:
    cmds:
      - reflex -r '\.go' -s -- sh -c 'go run ./cmd'

  #
  # Lint
  #
  lint:
    cmds:
      - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.50.1 golangci-lint run -v

  lint:fix:
    cmds:
      - golangci-lint run --fix

  #
  # Test
  #
  test:
    cmds:
      - go test ./internal/...

  test:models:
    cmds:
      - go test ./internal/adapters/models/...

  #
  # Build
  #
  build:
    cmds:
      - go build -o bin/users_service_crqs ./cmd

  #
  # Docker
  #
  docker:build:
    cmds:
      - docker build -t users_service_cqrs .

  docker:run:
    cmds:
      - docker run users_service_cqrs --env-file=./.env

  #
  # gRPC
  #
  grpc:generate:
    cmds:
      - |
        protoc --proto_path=./api/proto \
          --go_opt=paths=source_relative --go_out=./internal/ports/grpc \
          --go-grpc_opt=paths=source_relative --go-grpc_out=./internal/ports/grpc \
          ./api/proto/*.proto

  #
  # OpenAPI
  #
  oapi:generate:
    cmds:
      - | 
        oapi-codegen \
          -package http \
          -generate chi-server,types,spec \
          ./api/openapi/users_service.yaml > ./internal/ports/http/server.gen.go
      - task oapi:generate:client

  oapi:generate:client:
    cmds:
      - |
        oapi-codegen \
          -package client \
          -generate client,types,spec \
          ./api/openapi/users_service.yaml > ./tests/client/client.gen.go
        

  #
  # ORM
  #
  orm:generate:
    cmds:
      - sqlboiler psql --wipe -o ./internal/adapters/models

  #
  # Migrations
  #
  mig:up:
    cmds:
      - goose -no-versioning -dir ./sql/migrations up

  mig:down:
    cmds:
      - goose -no-versioning -dir ./sql/migrations down

  mig:generate:
    cmds:
      - goose -s -dir ./sql/migrations create {{.CLI_ARGS}} sql

  #
  # Seeds
  #
  seeds:up:
    cmds:
      - goose -dir ./sql/seeds up

  seeds:down:
    cmds:
      - goose -dir ./sql/seeds down

  seeds:generate:
    cmds:
      - goose -dir ./sql/seeds create {{.CLI_ARGS}} sql

  #
  # Local setup
  #
  local-setup:
    cmds:
      - docker-compose up -d
      - task mig:up
      - task seeds:up

  ci:boot:
    cmds:
      - docker-compose --profile app up -d